---
- name: Installer dépendances système pour Python et psycopg2
  become: true
  ansible.builtin.apt:
    name:
      - python3
      - python3-pip
      - python3-venv
      - libpq-dev
    state: present
    update_cache: true

- name: Créer un répertoire pour l'application FastAPI
  file:
    path: /opt/fastapi_app
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Créer l'environnement virtuel via pip (sans community.general)
  become: true
  pip:
    virtualenv: /opt/fastapi_app/venv
    virtualenv_command: "python3 -m venv"
    name: []
    state: present

- name: Installer FastAPI, uvicorn et psycopg2-binary dans le venv
  become: true
  pip:
    virtualenv: /opt/fastapi_app/venv
    name:
      - fastapi
      - uvicorn
      - psycopg2-binary
    state: present

- name: Copier le code de l'application FastAPI
  become: true
  ansible.builtin.template:
    src: main.py.j2
    dest: /opt/fastapi_app/main.py
    owner: root
    group: root
    mode: '0755'

- name: Créer le service systemd pour l'application FastAPI
  become: true
  ansible.builtin.template:
    src: fastapi_app.service.j2
    dest: /etc/systemd/system/fastapi_app.service
    owner: root
    group: root
    mode: '0644'

- name: Reloader systemd pour prendre en compte le nouveau service
  become: true
  ansible.builtin.systemd:
    daemon_reload: yes

- name: Activer et démarrer le service FastAPI
  become: true
  ansible.builtin.systemd:
    name: fastapi_app
    state: started
    enabled: true

- name: Attendre quelques secondes que l'application soit UP
  wait_for:
    host: 127.0.0.1
    port: 8000
    delay: 2
    timeout: 30

- name: Faire une requête sur l'API et enregistrer le résultat
  uri:
    url: http://127.0.0.1:8000/mon_nom
    return_content: true
  register: api_result

- name: Afficher le résultat dans un debug
  debug:
    var: api_result.content
